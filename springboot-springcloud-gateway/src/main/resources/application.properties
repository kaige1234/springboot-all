server.port=9033
spring.application.name=spring-gatway
eureka.instance.hostname=${spring.application.name}
eureka.client.service-url.register-with-euerka=true
eureka.client.service-url.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:9030/eureka
#spring.cloud.gateway.routes[0].predicates[0]= Path=/spring-ribbon-01/**
#spring.cloud.gateway.routes[0].filters[0]= StripPrefix=1
#spring.cloud.gateway.routes[0].uri=http://127.0.0.1:9031

#自定的路由断言工厂
#自定义断言工厂的规则请参照CookieRoutePredicateFactory
#第一点：敢于自定义断言的命名，命名是根据文件名字 Custom + RoutePredicateFactory
# Custom 作为key 对应 spring.cloud.gateway.routes[0].predicates[1]= Custom=Auto 的 值为：Auto
#第二点：在服务启动时会有该断言的名称加载 Loaded RoutePredicateFactory [Custom]
spring.cloud.gateway.routes[0].id=custom-routes
spring.cloud.gateway.routes[0].predicates[0]= Path=/custom/**
spring.cloud.gateway.routes[0].predicates[1]= Custom=Auto
spring.cloud.gateway.routes[0].filters[0]= StripPrefix=1
#自定义的过滤器与custom定义的过滤器不一样
spring.cloud.gateway.routes[0].filters[1]= TestDefine=define
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:9031
#配置gateway进行负载，当有多台机器时，通过如下配置可使机器负载
spring.cloud.gateway.routes[1].id=lb_routes
spring.cloud.gateway.routes[1].predicates[0]= Path=/lb/**
spring.cloud.gateway.routes[1].filters[0]= StripPrefix=1
#sping-ribbon-01 为在eureka中的服务器名称
spring.cloud.gateway.routes[1].uri=lb://sping-ribbon-01
spring.cloud.gateway.discovery.locator.enabled=true
#是否小写方式
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#限流的过滤器的配置
spring.cloud.gateway.routes[2].id=rateLimiter_route
spring.cloud.gateway.routes[2].predicates[0]= Path=/rateLimiter/**
spring.cloud.gateway.routes[2].filters[0].name=RequestRateLimiter
spring.cloud.gateway.routes[2].filters[0].args[0]=redis-rate-limiter.replenishRate: 1
spring.cloud.gateway.routes[2].filters[0].args[1]=redis-rate-limiter.burstCapacity: 2
#spring.cloud.gateway.routes[2].filters[0].args[2]=redis-rate-limiter.requestedTokens: 1
#spring.cloud.gateway.routes[2].filters[0].args[3]=request-rate-limiter.deny-empty-key=true
spring.cloud.gateway.routes[2].filters[0].args[4]=keyResolver= "#{@ipAddressKeyResolver}"
spring.cloud.gateway.routes[2].uri=http://127.0.0.1:9031


#配置redis
spring.redis.host=192.168.1.7
spring.redis.port=6379



